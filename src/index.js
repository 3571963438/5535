#!/usr/bin/env node
import{Server as A}from'@modelcontextprotocol/sdk/server/index.js';import{StdioServerTransport as B}from'@modelcontextprotocol/sdk/server/stdio.js';import{CallToolRequestSchema as C,ListToolsRequestSchema as D}from'@modelcontextprotocol/sdk/types.js';import{ocrTools as E}from'./ocrTools.js';import{handleOCR as F}from'./ocrHandler.js';const s=new A({name:'ocr-mcp-server',version:'1.0.0'},{capabilities:{tools:{}}});s.setRequestHandler(D,async()=>({tools:E}));s.setRequestHandler(C,async r=>{try{const G=await F(r.params);return G}catch(e){return{content:[{type:'text',text:`错误: ${e.message}`}],isError:true}}});async function m(){const t=new B();await s.connect(t);console.error('OCR MCP 服务器已启动')}m().catch(e=>{console.error('服务器启动失败:',e);process.exit(1)});
